# poisson

python train.py -exp lgbm_poisson_2 -obj poisson -lr 0.01 -cv none -nsplit 3 -num 20000 -early 200 -drate 0.7
target_features = [
        'Snap', 'SellPrice', 'Lag_RollMean_28', 'Lag',
        'TimeFeatures', 'Lag_SellPrice', 'Ids'
    ]
CV: 2.285   PB: 0.69839

python train.py -exp lgbm_poisson_3 -obj poisson -lr 0.01 -cv none -nsplit 3 -num 20000 -early 200 -drate 0.6
target_features = [
        'Snap', 'SellPrice', 'Lag_RollMean_28', 'Lag', 'Lag_RollMean_45',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
CV: 2.263   PB: 0.69074


# データ量を増やすとだめっぽい
python train.py -exp lgbm_poisson_4 -obj poisson -lr 0.01 -cv none -nsplit 3 -num 20000 -early 200 -drate 0.8
target_features = [
        'Snap', 'SellPrice', 'Lag_RollMean_28', 'Lag', 'Lag_RollMean_45',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
CV: 2.263   PB: 0.81029



# tweedie

python train.py -exp lgbm_tweedie_1 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 20000 -early 200 -drate 0.6
target_features = [
        'Snap', 'SellPrice', 'Lag_RollMean_28', 'Lag', 'Lag_RollMean_45',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
CV: 2.256    PB: 0.73692


# Subsampleとfeaturefractionを設定
python train.py -exp lgbm_tweedie_2 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 20000 -early 200 -drate 0.6 -subs 0.7 -featfrac 0.7
target_features = [
        'Snap', 'SellPrice', 'Lag_RollMean_28', 'Lag', 'Lag_RollMean_45',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
CV: 2.253    PB: 0.76937


# コスト関数を変えてみた
tweedie_1と同じ条件
python train.py -exp lgbm_tweedie_3 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 20000 -early 200 -drate 0.6
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28', 'Lag_RollMean_45',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
CV: 2.277  WRMSSE: 0.616  PB: 0.63411


'Price_StoreItemDate'の重要度はそんなに高くない
python train.py -exp lgbm_tweedie_4 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 20000 -early 200 -drate 0.4
target_features = [
        'Snap', 'SellPrice', 'Price_StoreItemDate', 'Lag', 'Lag_RollMean_28',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.260  WRMSSE: 0.627  PB: 

python train.py -exp lgbm_tweedie_5 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 20000 -early 200 -drate 0.4
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28', 'Price_fe',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.261  WRMSSE: 0.632  PB: 0.67158


# 長時間0のデータを削除する前処理を設定
# 学習するデータが少なくなるからCVは落ちる
python train.py -exp lgbm_tweedie_6 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 20000 -early 200 -drate 0.4 -prep
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28', 'Price_fe',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.671  WRMSSE: 1.199  PB: 0.94335


python train.py -exp lgbm_tweedie_7 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 20000 -early 200 -drate 0.4
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28', 'Price_fe',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event',
        'SalesPeriod'
    ]
RMSE: 2.261  WRMSSE: 0.628  PB: 


python train.py -exp lgbm_tweedie_8 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 20000 -early 200 -drate 0.4
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_1', 'Lag_RollMean_14', 'Lag_RollMean_28', 
        'Price_fe', 'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event',
        'SalesPeriod'
    ]
RMSE: 2.000  WRMSSE: 0.641  PB: 4.12133


python train.py -exp lgbm_tweedie_9 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 20000 -early 200 -drate 0.4
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_7', 'Lag_RollMean_14', 'Lag_RollMean_28', 
        'Price_fe', 'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event',
        'SalesPeriod'
    ]
RMSE: 2.119  WRMSSE: 0.624  PB: 2.57433



# パラメータを変えてみる
# numは無視（n_estimators=1400）で設定
https://www.kaggle.com/kyakovlev/m5-three-shades-of-dark-darker-magic
python train.py -exp lgbm_tweedie_10 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 20000 -early 2000000 -drate 0.6 -subs 0.5 -featfrac 0.5
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28', 'Lag_RollMean_45',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.270   WRMSSE: 0.560   PB: 0.60306


# Lagとsnapを少々いじる
python train.py -exp lgbm_tweedie_11 -obj tweedie -lr 0.01 -cv none -nsplit 3 -early 2000000 -drate 0.6 -subs 0.5 -featfrac 0.5
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.266   WRMSSE: 0.562   PB: 0.58197


# Lag, RollMean_28を変更
# lgbm_tweedie_11と同じ条件
# Lagは長期間複数パターンあったほうがいいみたい
python train.py -exp lgbm_tweedie_12 -obj tweedie -lr 0.01 -cv none -nsplit 3 -early 2000000 -drate 0.6 -subs 0.5 -featfrac 0.5
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.259   WRMSSE: 0.554   PB: 0.59241


# 学習率をさげてみた
# めっちゃ時間かかる（21時間）
python train.py -exp lgbm_tweedie_13 -obj tweedie -lr 0.001 -cv none -nsplit 3 -num 100000 -early 500 -drate 0.6 -subs 0.7 -featfrac 0.7
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.267   WRMSSE: 0.614   PB: 0.64170



python train.py -exp lgbm_tweedie_14 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 1500 -early 2000000 -drate 0.8 -subs 0.5 -featfrac 0.5
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event',
        'SalesPeriod', 'Price_StoreCatDate'
    ]
RMSE:    WRMSSE:    PB: 





# 店舗ごとのモデル
python train_group.py -exp lgbm_tweedie_storeid_1 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 20000 -early 200 -drate 0.4 -grp store
target_features = [
        'Snap', 'SellPrice', 'Ids', 'Event',
    ]
RMSE: 2.730  WRMSSE: 1.157  PB: 1.19527


# 変数を増加　earlyboostroundも変更
python train_group.py -exp lgbm_tweedie_storeid_2 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 2000 -early 20000 -drate 0.6 -grp store
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28', 'Lag_RollMean_45',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.268  WRMSSE: 0.581  PB: 0.64558


# numboostroundを増加させる
python train_group.py -exp lgbm_tweedie_storeid_3 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 5000 -early 20000 -drate 0.6 -grp store
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28', 'Lag_RollMean_45',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.275  WRMSSE: 0.571  PB: 0.64365



python train_group.py -exp lgbm_tweedie_storeid_4 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 5000 -early 20000 -drate 0.8 -grp store
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28', 'Lag_RollMean_45',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.260  WRMSSE: 0.560  PB: 0.64807


# metricsのrmseを削除　earlystoppingroundsの対象にrmseを考慮させないため
python train_group.py -exp lgbm_tweedie_storeid_5 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 5000 -early 200 -drate 0.8 -grp store
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28', 'Lag_RollMean_45',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.250  WRMSSE: 0.578  PB: 0.64449


# num_leaves, min_data_in_leaf
python train_group.py -exp lgbm_tweedie_storeid_6 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 2000 -early 200 -drate 0.8 -subs 0.5 -featfrac 0.5 -grp store
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28', 'Lag_RollMean_45',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.298  WRMSSE: 0.590  PB: 0.62058


# num_leaves, min_data_in_leaf
python train_group.py -exp lgbm_tweedie_storeid_7 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 2000 -early 200 -drate 0.6 -subs 0.5 -featfrac 0.5 -grp store
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28', 
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.376  WRMSSE: 0.604  PB: 


python train_group.py -exp lgbm_tweedie_storeid_8 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 2000 -early 200 -drate 0.8 -subs 0.5 -featfrac 0.5 -grp store
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28', 
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.297  WRMSSE: 0.591   PB: 0.59905




python train_group.py -exp lgbm_tweedie_stateid_1 -obj tweedie -lr 0.01 -cv none -nsplit 3 -num 2000 -early 200 -drate 0.8 -subs 0.5 -featfrac 0.5 -grp state
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28', 
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.408  WRMSSE: 0.573   PB: 0.59028



# KFold (shuffle=True)
python train.py -exp lgbm_tweedie_kfold_1 -obj tweedie -lr 0.01 -cv kfold -nsplit 4 -num 1500 -early 2000000 -drate 0.6 -subs 0.5 -featfrac 0.5
target_features = [
        'Snap', 'SellPrice', 'Lag', 'Lag_RollMean_28',
        'TimeFeatures', 'Lag_SellPrice', 'Lag_SellPrice_diff', 'Ids', 'Event'
    ]
RMSE: 2.453  WRMSSE: 0.669   PB: 0.65993
